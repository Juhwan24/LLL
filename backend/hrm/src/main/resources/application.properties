spring.application.name=hrm

# Database Configuration
spring.datasource.url=jdbc:postgresql://trolley.proxy.rlwy.net:14804/railway
spring.datasource.username=postgres
spring.datasource.password=rAXIRxGtyOyUSNWUVwBaEdwSvOOfJHmg
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# AI Pipeline Configuration
app.ai.python.path=python
app.ai.scripts.path=ai
app.ai.timeout.seconds=30
app.ai.max.retries=3
app.ai.retry.delay.ms=1000

# OpenAI Configuration (환경변수에서 로드)
openai.api.key=${OPENAI_API_KEY:}
openai.model.cost-effective=${OPENAI_MODEL_COST_EFFECTIVE:gpt-3.5-turbo}
openai.model.high-performance=${OPENAI_MODEL_HIGH_PERFORMANCE:gpt-4o}

# Cache Configuration
spring.cache.type=redis
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.password=${REDIS_PASSWORD:}
spring.data.redis.timeout=2000
spring.cache.redis.time-to-live=3600000

# Async Configuration
spring.task.execution.pool.core-size=5
spring.task.execution.pool.max-size=20
spring.task.execution.pool.queue-capacity=100
spring.task.execution.thread-name-prefix=ai-async-

# Retry Configuration
spring.retry.enabled=true

# Actuator & Metrics Configuration
management.endpoints.web.exposure.include=health,metrics,prometheus,info
management.endpoint.health.show-details=when-authorized
management.metrics.export.prometheus.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true

# Logging Configuration
logging.level.com.hrm.hrm.ai=DEBUG
logging.level.root=INFO
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
